spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true

algafood.storage.local.diretorio-fotos=D:\\ws-algaworks\\fotos\\algafood

#usado para selecionar entre salvar arquivo no s3 ou local
#algafood.storage.tipo=s3
algafood.storage.tipo=local

###########     S3    ###########
#adicionar as chaves indo no inicializador do app e indo em config e colocar as chaves e o nome
# codigo de acesso
#algafood.storage.s3.id-chave-acesso=
# chave de acesso secreta
#algafood.storage.s3.chave-acesso-secreta=

algafood.storage.s3.id-chave-acesso=${S3-ID-KEY-ACCESS}
algafood.storage.s3.chave-acesso-secreta=${s3-key-secret}

#nome do bucket
algafood.storage.s3.bucket=algafood-lluanps

# Leste dos EUA (Norte da Virgínia) us-east-1 = us-east-1
algafood.storage.s3.regiao=us-east-1

# pasta criado no bucket para salvar os arquivos
algafood.storage.s3.diretorio-fotos=catalogo
###########     S3    ###########



###########     email(aws-ses)     ###########
spring.mail.host=email-smtp.us-east-1.amazonaws.com
spring.mail.port=587
#adicionar as chaves indo no inicializador do app e indo em config e colocar as chaves e o nome
#spring.mail.username=
#spring.mail.password=

# rementente
algafood.email.remetente=AlgaFood <lluanps@gmail.com>

#usado para alterar a formatação do email para pt_BR
spring.freemarker.settings.locale=pt_BR

#email fake= FAKE; email real = SMTP; email sandbox= SANDBOX
algafood.email.impl=SMTP

#email sandbox
algafood.email.sandbox.destinatario=lluanps@gmail.

#A partir da versão 2.6.0, uma configuração adicional é necessária para o funcionamento do SpringFox 3.0.0
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

###log###
#logging.loggly.token=codigo do token armazenado no spring

#spring security
spring.security.user.name=algafood
spring.security.user.password=123456

#limita o tamanho geral do arquivo
#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

#tamanho maximo de conexoes - padrao e 10
spring.datasource.hikari.maximum-pool-size=5

#por padrao o minimo de conexoes e sempre atribuido pelo valor do maximo de conexoes
spring.datasource.hikari.minimum-idle=3

#adiciona uma execao para adicionar mais conexoes caso necessario - caso passe o tempo limite ele e acionado
spring.datasource.hikari.idle-timeout=10000

#habilita erros na desserializacao de propriedades inexistentes
spring.jackson.deserialization.fail-on-unknown-properties=true

#habilita erros na desserializacao de propriedades ignorada
spring.jackson.deserialization.fail-on-ignored-properties=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#Usado para mudar o nome das propriedades para snake case
#spring.jackson.property-naming-strategy=SNAKE_CASE

#gera o sql para o flyway
#spring.jpa.properties.javax.persistence.schema-gerenation.scripts.action=create
#qual localizacao eu quero que crie os arquivos que vai gerar os scripts
#spring.jpa.properties.javax.persistence.schema-gerenation.scripts.create-target=src/main/resources